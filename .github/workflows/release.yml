name: "Release"

on:
  push:
    tags:
      - "*"

permissions:
  contents: read

jobs:
  build:
    name: "Build"
    runs-on: "ubuntu-latest"
    environment:
      name: "release"
    strategy:
      matrix:
        python-version: ['3.11', '3.12', '3.13']

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{matrix.python-version}}
      uses: actions/setup-python@v3
      with:
        python-version: ${{matrix.python-version}}
    - name: Install system build deps
      run: |
        sudo apt install libgirepository1.0-dev gir1.2-gstreamer-1.0
    - name: Install runtime tools
      run: |
        python -m pip install --upgrade pip
        pip install poetry
    - name: Setup poetry env
      run: |
        poetry install
    - name: Build package
      run: |
        SOURCE_DATE_EPOCH=$(git log -1 --pretty=%ct) \
        poetry build
        cd dist && for file in * ; do sha256sum $file > $file.sha256sum ; done
    - name: Build pex
      run: |
        mkdir pex
        SOURCE_DATE_EPOCH=$(git log -1 --pretty=%ct) \
        poetry run pex . -o pex/tuatara.${{matrix.python-version}}  -c tuatara
        cd pex && sha256sum tuatara.${{matrix.python-version}} > tuatara.${{matrix.python-version}}.sha256sum

    - name: "Upload dists"
      uses: "actions/upload-artifact@v4"
      with:
        name: "release${{matrix.python-version}}"
        path: "dist/"
        if-no-files-found: error
        retention-days: 5

    - name: "Upload pex"
      uses: "actions/upload-artifact@v4"
      with:
        name: "pex${{matrix.python-version}}"
        path: "pex/"
        if-no-files-found: error
        retention-days: 5


  publish:
    name: "Publish"
    if: startsWith(github.ref, 'refs/tags/')
    needs: ["build"]
    permissions:
      contents: write
    #  id-token: write # Needed for trusted publishing to PyPI.
    runs-on: "ubuntu-latest"

    steps:
    - name: "Download dists"
      uses: actions/download-artifact@v4
      with:
        name: "release3.11"
        path: "dist/"

    - name: "Upload dists to GitHub Release"
      env:
        GITHUB_TOKEN: "${{ secrets.PUBLISH_KEY }}"
      run: |
        gh release upload ${{ github.ref_name }} dist/* --repo ${{ github.repository }}

    #- name: "Publish dists to PyPI"
    #  uses: pypa/gh-action-pypi-publish@v1

  publishpex:
    name: "Publish pex"
    if: startsWith(github.ref, 'refs/tags/')
    needs: ["build"]
    permissions:
      contents: write
    #  id-token: write # Needed for trusted publishing to PyPI.
    runs-on: "ubuntu-latest"
    strategy:
      matrix:
        python-version: ['3.11', '3.12', '3.13']

    steps:
    - name: "Download pex"
      uses: "actions/download-artifact@v4"
      with:
        name: "pex${{matrix.python-version}}"
        path: "pex/"
        if-no-files-found: error
        retention-days: 5

    - name: "Upload pex to GitHub Release"
      env:
        GITHUB_TOKEN: "${{ secrets.PUBLISH_KEY }}"
      run: |
        gh release upload ${{ github.ref_name }} pex/* --repo ${{ github.repository }}
